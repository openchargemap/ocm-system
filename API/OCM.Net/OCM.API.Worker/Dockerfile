#See https://aka.ms/customizecontainer to learn how to customize your debug container and how Visual Studio uses this Dockerfile to build your images for faster debugging.

FROM mcr.microsoft.com/dotnet/runtime:9.0 AS base
USER app
WORKDIR /app

FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src
COPY ["API/OCM.Net/OCM.API.Worker/OCM.API.Worker.csproj", "API/OCM.Net/OCM.API.Worker/"]
COPY ["API/OCM.Net/OCM.API.Client/OCM.API.Client.csproj", "API/OCM.Net/OCM.API.Client/"]
COPY ["API/OCM.Net/OCM.API.Model/OCM.API.Common.Model.csproj", "API/OCM.Net/OCM.API.Model/"]
COPY ["API/OCM.Net/OCM.API.Web/OCM.API.Web.csproj", "API/OCM.Net/OCM.API.Web/"]
COPY ["API/OCM.Net/OCM.API.Core/OCM.API.Core.csproj", "API/OCM.Net/OCM.API.Core/"]
RUN dotnet restore "./API/OCM.Net/OCM.API.Worker/./OCM.API.Worker.csproj"
COPY . .
WORKDIR "/src/API/OCM.Net/OCM.API.Worker"
RUN dotnet build "./OCM.API.Worker.csproj" -c $BUILD_CONFIGURATION -o /app/build

FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "./OCM.API.Worker.csproj" -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "OCM.API.Worker.dll"]